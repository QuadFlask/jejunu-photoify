//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.1-SNAPSHOT.
//


package ac.jejunu.photify.rest;

import java.util.List;
import ac.jejunu.photify.command.ArticleCommand;
import ac.jejunu.photify.entity.Article;
import ac.jejunu.photify.rest.java.util.List_Article;
import org.androidannotations.api.rest.RestErrorHandler;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.converter.FormHttpMessageConverter;
import org.springframework.http.converter.json.GsonHttpMessageConverter;
import org.springframework.web.client.RestClientException;
import org.springframework.web.client.RestTemplate;

public final class TestCommandRestClient_
    implements TestCommandRestClient
{

    private String rootUrl;
    private RestTemplate restTemplate;
    private RestErrorHandler restErrorHandler;

    public TestCommandRestClient_() {
        rootUrl = "http://192.168.0.3:8080/";
        restTemplate = new RestTemplate();
        restTemplate.getMessageConverters().add(new FormHttpMessageConverter());
        restTemplate.getMessageConverters().add(new GsonHttpMessageConverter());
    }

    @Override
    public List<Article> getArticles(ArticleCommand articleCommand) {
        HttpEntity<ArticleCommand> requestEntity = new HttpEntity<ArticleCommand>(articleCommand);
        try {
            return restTemplate.exchange(rootUrl.concat("/getaticles.photo"), HttpMethod.POST, requestEntity, List_Article.class).getBody();
        } catch (RestClientException e) {
            if (restErrorHandler!= null) {
                restErrorHandler.onRestClientExceptionThrown(e);
                return null;
            } else {
                throw e;
            }
        }
    }

    @Override
    public String writeArticle(Article article) {
        HttpEntity<Article> requestEntity = new HttpEntity<Article>(article);
        try {
            return restTemplate.exchange(rootUrl.concat("/writeaticle.photo"), HttpMethod.POST, requestEntity, String.class).getBody();
        } catch (RestClientException e) {
            if (restErrorHandler!= null) {
                restErrorHandler.onRestClientExceptionThrown(e);
                return null;
            } else {
                throw e;
            }
        }
    }

}
